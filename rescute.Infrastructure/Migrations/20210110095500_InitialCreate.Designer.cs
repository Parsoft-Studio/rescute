// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rescute.Infrastructure;

namespace rescute.Infrastructure.Migrations
{
    [DbContext(typeof(rescuteContext))]
    [Migration("20210110095500_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("rescute")
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("rescute.Domain.Aggregates.Animal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BirthCertificateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IntroducedById");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.Samaritan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Samaritans");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.LogItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnimalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SamaritanId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("SamaritanId");

                    b.ToTable("AnimalLogs");

                    b.HasDiscriminator<string>("Discriminator").HasValue("LogItem");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.Commented", b =>
                {
                    b.HasBaseType("rescute.Domain.Entities.LogItems.LogItem");

                    b.Property<string>("RepliesToId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("RepliesToId");

                    b.HasDiscriminator().HasValue("Commented");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.LogItemWithAttachments", b =>
                {
                    b.HasBaseType("rescute.Domain.Entities.LogItems.LogItem");

                    b.HasDiscriminator().HasValue("LogItemWithAttachments");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.SamaritanContributed", b =>
                {
                    b.HasBaseType("rescute.Domain.Entities.LogItems.LogItem");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("BillId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("BillId");

                    b.HasDiscriminator().HasValue("SamaritanContributed");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.TransportRequested", b =>
                {
                    b.HasBaseType("rescute.Domain.Entities.LogItems.LogItem");

                    b.HasDiscriminator().HasValue("TransportRequested");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.BillAttached", b =>
                {
                    b.HasBaseType("rescute.Domain.Entities.LogItems.LogItemWithAttachments");

                    b.Property<bool>("ContributionRequested")
                        .HasColumnType("bit");

                    b.Property<long>("Total")
                        .HasColumnType("bigint");

                    b.HasDiscriminator().HasValue("BillAttached");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.StatusReported", b =>
                {
                    b.HasBaseType("rescute.Domain.Entities.LogItems.LogItemWithAttachments");

                    b.HasDiscriminator().HasValue("StatusReported");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.Animal", b =>
                {
                    b.HasOne("rescute.Domain.Aggregates.Samaritan", "IntroducedBy")
                        .WithMany()
                        .HasForeignKey("IntroducedById");

                    b.OwnsOne("rescute.Domain.ValueObjects.AnimalType", "Type", b1 =>
                        {
                            b1.Property<string>("AnimalId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AnimalId");

                            b1.ToTable("Animals");

                            b1.WithOwner()
                                .HasForeignKey("AnimalId");
                        });

                    b.OwnsMany("rescute.Domain.ValueObjects.Attachment", "Attachments", b1 =>
                        {
                            b1.Property<string>("AnimalId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Alias")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FileName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AnimalId", "Id");

                            b1.ToTable("AnimalAttachments");

                            b1.WithOwner()
                                .HasForeignKey("AnimalId");

                            b1.OwnsOne("rescute.Domain.ValueObjects.AttachmentType", "Type", b2 =>
                                {
                                    b2.Property<string>("AttachmentAnimalId")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<int>("AttachmentId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Type")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AttachmentAnimalId", "AttachmentId");

                                    b2.ToTable("AnimalAttachments");

                                    b2.WithOwner()
                                        .HasForeignKey("AttachmentAnimalId", "AttachmentId");
                                });
                        });
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.Samaritan", b =>
                {
                    b.OwnsOne("rescute.Shared.MyName", "FirstName", b1 =>
                        {
                            b1.Property<string>("SamaritanId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("MaxLength")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SamaritanId");

                            b1.ToTable("Samaritans");

                            b1.WithOwner()
                                .HasForeignKey("SamaritanId");
                        });

                    b.OwnsOne("rescute.Shared.MyName", "LastName", b1 =>
                        {
                            b1.Property<string>("SamaritanId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("MaxLength")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SamaritanId");

                            b1.ToTable("Samaritans");

                            b1.WithOwner()
                                .HasForeignKey("SamaritanId");
                        });

                    b.OwnsOne("rescute.Shared.PhoneNumber", "Mobile", b1 =>
                        {
                            b1.Property<string>("SamaritanId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<bool>("IsMobile")
                                .HasColumnType("bit");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SamaritanId");

                            b1.ToTable("Samaritans");

                            b1.WithOwner()
                                .HasForeignKey("SamaritanId");
                        });
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.LogItem", b =>
                {
                    b.HasOne("rescute.Domain.Aggregates.Animal", null)
                        .WithMany("Log")
                        .HasForeignKey("AnimalId");

                    b.HasOne("rescute.Domain.Aggregates.Samaritan", "Samaritan")
                        .WithMany()
                        .HasForeignKey("SamaritanId");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.Commented", b =>
                {
                    b.HasOne("rescute.Domain.Entities.LogItems.LogItem", "RepliesTo")
                        .WithMany()
                        .HasForeignKey("RepliesToId");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.LogItemWithAttachments", b =>
                {
                    b.OwnsMany("rescute.Domain.ValueObjects.Attachment", "Attachments", b1 =>
                        {
                            b1.Property<string>("LogItemWithAttachmentsId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Alias")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FileName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LogItemWithAttachmentsId", "Id");

                            b1.ToTable("AnimalLogAttachments");

                            b1.WithOwner()
                                .HasForeignKey("LogItemWithAttachmentsId");

                            b1.OwnsOne("rescute.Domain.ValueObjects.AttachmentType", "Type", b2 =>
                                {
                                    b2.Property<string>("AttachmentLogItemWithAttachmentsId")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<int>("AttachmentId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Type")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AttachmentLogItemWithAttachmentsId", "AttachmentId");

                                    b2.ToTable("AnimalLogAttachments");

                                    b2.WithOwner()
                                        .HasForeignKey("AttachmentLogItemWithAttachmentsId", "AttachmentId");
                                });
                        });
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.SamaritanContributed", b =>
                {
                    b.HasOne("rescute.Domain.Entities.LogItems.BillAttached", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId");
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.TransportRequested", b =>
                {
                    b.OwnsOne("rescute.Domain.ValueObjects.MapPoint", "EventLocation", b1 =>
                        {
                            b1.Property<string>("TransportRequestedId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("TransportRequestedId");

                            b1.ToTable("AnimalLogs");

                            b1.WithOwner()
                                .HasForeignKey("TransportRequestedId");
                        });

                    b.OwnsOne("rescute.Domain.ValueObjects.MapPoint", "ToLocation", b1 =>
                        {
                            b1.Property<string>("TransportRequestedId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("TransportRequestedId");

                            b1.ToTable("AnimalLogs");

                            b1.WithOwner()
                                .HasForeignKey("TransportRequestedId");
                        });
                });

            modelBuilder.Entity("rescute.Domain.Entities.LogItems.StatusReported", b =>
                {
                    b.OwnsOne("rescute.Domain.ValueObjects.MapPoint", "EventLocation", b1 =>
                        {
                            b1.Property<string>("StatusReportedId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("StatusReportedId");

                            b1.ToTable("AnimalLogs");

                            b1.WithOwner()
                                .HasForeignKey("StatusReportedId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
