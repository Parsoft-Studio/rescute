// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rescute.Infrastructure;

namespace rescute.Infrastructure.Migrations
{
    [DbContext(typeof(rescuteContext))]
    partial class rescuteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("rescute")
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("rescute.Domain.Aggregates.Animal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityCertificateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("IntroducedBy");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.Comment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("RepliesTo")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("RepliesTo");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.Samaritan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Samaritans");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.Bill+ContribRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BillId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("RequestCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("BillId")
                        .IsUnique()
                        .HasFilter("[BillId] IS NOT NULL");

                    b.ToTable("ContributionRequests");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.TimelineItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnimalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("AnimalId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("TimelineItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TimelineItem");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.TimelineItemWithAttachments", b =>
                {
                    b.HasBaseType("rescute.Domain.Aggregates.TimelineItems.TimelineItem");

                    b.HasDiscriminator().HasValue("TimelineItemWithAttachments");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.TransportRequest", b =>
                {
                    b.HasBaseType("rescute.Domain.Aggregates.TimelineItems.TimelineItem");

                    b.HasDiscriminator().HasValue("TransportRequest");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.Bill", b =>
                {
                    b.HasBaseType("rescute.Domain.Aggregates.TimelineItems.TimelineItemWithAttachments");

                    b.Property<bool>("IncludesLabResults")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludesPrescription")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludesVetFee")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Bill");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.StatusReport", b =>
                {
                    b.HasBaseType("rescute.Domain.Aggregates.TimelineItems.TimelineItemWithAttachments");

                    b.HasDiscriminator().HasValue("StatusReport");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.Animal", b =>
                {
                    b.HasOne("rescute.Domain.Aggregates.Samaritan", null)
                        .WithMany()
                        .HasForeignKey("IntroducedBy");

                    b.OwnsOne("rescute.Domain.ValueObjects.AnimalType", "Type", b1 =>
                        {
                            b1.Property<string>("AnimalId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AnimalId");

                            b1.ToTable("Animals");

                            b1.WithOwner()
                                .HasForeignKey("AnimalId");
                        });

                    b.OwnsMany("rescute.Domain.ValueObjects.Attachment", "Attachments", b1 =>
                        {
                            b1.Property<string>("AnimalId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Extension")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FileName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AnimalId", "Id");

                            b1.ToTable("AnimalAttachments");

                            b1.WithOwner()
                                .HasForeignKey("AnimalId");
                        });
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.Comment", b =>
                {
                    b.HasOne("rescute.Domain.Aggregates.Samaritan", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("rescute.Domain.Aggregates.TimelineItems.TimelineItem", null)
                        .WithMany()
                        .HasForeignKey("RepliesTo");
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.Samaritan", b =>
                {
                    b.OwnsOne("rescute.Shared.Name", "FirstName", b1 =>
                        {
                            b1.Property<string>("SamaritanId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SamaritanId");

                            b1.ToTable("Samaritans");

                            b1.WithOwner()
                                .HasForeignKey("SamaritanId");
                        });

                    b.OwnsOne("rescute.Shared.Name", "LastName", b1 =>
                        {
                            b1.Property<string>("SamaritanId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SamaritanId");

                            b1.ToTable("Samaritans");

                            b1.WithOwner()
                                .HasForeignKey("SamaritanId");
                        });

                    b.OwnsOne("rescute.Shared.PhoneNumber", "Mobile", b1 =>
                        {
                            b1.Property<string>("SamaritanId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<bool>("IsMobile")
                                .HasColumnType("bit");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SamaritanId");

                            b1.ToTable("Samaritans");

                            b1.WithOwner()
                                .HasForeignKey("SamaritanId");
                        });
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.Bill+ContribRequest", b =>
                {
                    b.HasOne("rescute.Domain.Aggregates.TimelineItems.Bill", "Bill")
                        .WithOne("ContributionRequest")
                        .HasForeignKey("rescute.Domain.Aggregates.TimelineItems.Bill+ContribRequest", "BillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("rescute.Domain.ValueObjects.Contribution", "Contributions", b1 =>
                        {
                            b1.Property<string>("ContribRequestId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("ContributorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TransactionId")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ContribRequestId", "Id");

                            b1.HasIndex("ContributorId");

                            b1.ToTable("Contributions");

                            b1.WithOwner()
                                .HasForeignKey("ContribRequestId");

                            b1.HasOne("rescute.Domain.Aggregates.Samaritan", null)
                                .WithMany()
                                .HasForeignKey("ContributorId");
                        });
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.TimelineItem", b =>
                {
                    b.HasOne("rescute.Domain.Aggregates.Animal", null)
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("rescute.Domain.Aggregates.Samaritan", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.TimelineItemWithAttachments", b =>
                {
                    b.OwnsMany("rescute.Domain.ValueObjects.Attachment", "Attachments", b1 =>
                        {
                            b1.Property<string>("TimelineItemWithAttachmentsId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Extension")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FileName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TimelineItemWithAttachmentsId", "Id");

                            b1.ToTable("TimelineItemAttachments");

                            b1.WithOwner()
                                .HasForeignKey("TimelineItemWithAttachmentsId");
                        });
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.TransportRequest", b =>
                {
                    b.OwnsOne("rescute.Domain.ValueObjects.MapPoint", "EventLocation", b1 =>
                        {
                            b1.Property<string>("TransportRequestId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("TransportRequestId");

                            b1.ToTable("TimelineItems");

                            b1.WithOwner()
                                .HasForeignKey("TransportRequestId");
                        });

                    b.OwnsOne("rescute.Domain.ValueObjects.MapPoint", "ToLocation", b1 =>
                        {
                            b1.Property<string>("TransportRequestId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("TransportRequestId");

                            b1.ToTable("TimelineItems");

                            b1.WithOwner()
                                .HasForeignKey("TransportRequestId");
                        });
                });

            modelBuilder.Entity("rescute.Domain.Aggregates.TimelineItems.StatusReport", b =>
                {
                    b.OwnsOne("rescute.Domain.ValueObjects.MapPoint", "EventLocation", b1 =>
                        {
                            b1.Property<string>("StatusReportId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("StatusReportId");

                            b1.ToTable("TimelineItems");

                            b1.WithOwner()
                                .HasForeignKey("StatusReportId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
