@page "/reports"
@using rescute.Web.Pages.Reports.Components
@using rescute.Web.Pages.Reports.ViewModels
@using rescute.Web.Pages.Shared.Components
@inject ReportsViewModel ViewModel;
@inject IStringLocalizer<LocalizationResources> Localizer
@rendermode InteractiveServer

@* @attribute [Authorize] *@

<HeadContent>
    <link rel="stylesheet" href="css/rescute-reports.css?v=2">
    <title>rescute</title>
</HeadContent>

<SectionContent SectionName="TopBarItems">
    <Checkbox Checked="@ViewModel.UsersReports" Text=@Localizer[LocalizationResources.MyReports]/>
    <Checkbox Checked="@ViewModel.UsersContributions" Text=@Localizer[LocalizationResources.MyContributions]/>
    <Checkbox Checked="@ViewModel.HasTransportRequest" CheckedChanged="@(value => ViewModel.HasTransportRequest = value)"
              Text=@Localizer[LocalizationResources.HasTransportRequest]/>
    <Checkbox Checked="@ViewModel.HasFundraiserRequest" Text=@Localizer[LocalizationResources.HasFundraiser]/>
</SectionContent>

<div class="container-fluid">
    @if (ViewModel.IsInitialized())
    {
        <div class="d-flex flex-wrap reports">

            @foreach (var report in ViewModel.Reports)
            {
                <ReportCard Image=@report.Image Distance=@report.Distance Timestamp=@report.Time
                            Description=@report.Description/>
            }
            <LoadMore LoadMoreClicked="@ViewModel.LoadNextPage" @rendermode="InteractiveServer"/>
        </div>
    }
    <NewReportButton/>
</div>


@code {

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.Refresh();
    }
   
}
